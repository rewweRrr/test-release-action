name: Create Release (manual)

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Тип bump (patch/minor/major)'
        required: false
        default: patch

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout dev branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: dev

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Generate release files (TypeScript)
        id: gen
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_BUMP: ${{ github.event.inputs.bump }}
        run: |
          set -euo pipefail
          npx tsx scripts/create-release.ts

          if [ ! -f release-info.json ]; then
            echo "release-info.json not found"
            exit 1
          fi

          cat release-info.json

          VERSION=$(jq -r .version release-info.json)
          RELEASE_NAME=$(jq -r .release_name release-info.json)
          CHANGELOG=$(jq -r .changelog release-info.json)

          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "release_name=$RELEASE_NAME" >> "$GITHUB_OUTPUT"
          echo "changelog<<EOF" >> "$GITHUB_OUTPUT"
          printf '%s\n' "$CHANGELOG" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create Pull Request from dev to main
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: dev
          base: main
          commit-message: "chore(release): v${{ steps.gen.outputs.version }}"
          title: ${{ steps.gen.outputs.release_name }}
          body: ${{ steps.gen.outputs.changelog }}
          labels: release
